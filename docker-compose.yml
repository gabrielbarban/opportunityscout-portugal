version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: opportunityscout-db
    environment:
      POSTGRES_DB: opportunityscout
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d opportunityscout"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: opportunityscout-backend
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://db:5432/opportunityscout
      QUARKUS_DATASOURCE_USERNAME: admin
      QUARKUS_DATASOURCE_PASSWORD: admin123
      QUARKUS_HTTP_PORT: 8080
      JWT_SECRET: sua-chave-secreta-super-segura-aqui-minimo-256bits
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: opportunityscout-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge